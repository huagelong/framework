#!/usr/bin/env php
<?php

/**
 * This example implements the same functionality as the DNS example without
 * using coroutines (i.e., "vanilla" React).
 */

require dirname(__DIR__) . '/vendor/autoload.php';

/**
 * Resolve a name to an IP address.
 *
 * @param string                      $name     The name to resolve.
 * @param React\Dns\Resolver\Resolver $resolver The resolver to use.
 */
function resolveDomainName($name, React\Dns\Resolver\Resolver $resolver)
{
    return $resolver
        ->resolve($name)
        ->then(
            function ($ip) use ($name) {
                echo 'Resolved "' . $name . '" to ' . $ip . PHP_EOL;
            },
            function ($e) use ($name) {
                echo 'Failed to resolve "' . $name . '" - ' . $e->getMessage() . PHP_EOL;
            }
        );
}

// -----------------------------------------------------------------------------

$loop = \React\EventLoop\Factory::create();

$resolver = (new React\Dns\Resolver\Factory)->create(
    '8.8.8.8',
    $loop
);

\React\Promise\all([
    resolveDomainName('recoil.io', $resolver),
    resolveDomainName('reactphp.org', $resolver),
    resolveDomainName('probably-wont-resolve', $resolver),
])->then(
    function () {
        echo 'Done' . PHP_EOL;
    }
);

$loop->run();
